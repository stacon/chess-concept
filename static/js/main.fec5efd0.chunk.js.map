{"version":3,"sources":["components/layout/components/actions-area/ActionsArea.js","components/layout/components/actions-area/styles.js","components/layout/components/actions-area/index.js","components/layout/components/board/components/square/Square.js","components/layout/components/board/components/square/styles.js","models/game/actions.js","models/utils/ActionCreator.js","components/layout/components/board/components/square/index.js","components/layout/components/board/components/square/withSquareState.js","components/layout/components/board/utils/darkBackground.js","components/layout/components/board/Board.js","components/layout/components/board/styles.js","reference-data/gameStatus.js","reference-data/pieces.js","models/game/utils/movements/pawn.js","models/game/utils/availableMoves.js","models/game/utils/getInitialBoard.js","models/game/utils/getInitialBoardWithIDs.js","models/game/utils/squareCoordinates.js","models/game/utils/hasOwnPiece.js","models/game/utils/isValidSquareIdForPawnInitialPlacement.js","models/game/reducer.js","models/game/selectors.js","models/game/epics.js","components/layout/components/board/index.js","components/layout/components/board/withBoardState.js","components/layout/components/info/index.js","components/layout/components/info/Info.js","components/layout/Layout.js","components/layout/styles.js","components/layout/index.js","components/layout/withLayoutState.js","store/storeConfig.js","App.js","store/createStore.js","reportWebVitals.js","index.js"],"names":["ActionsArea","classes","actions","Grid","item","map","id","onClick","color","label","Button","variant","root","button","styles","marginRight","ActionsAreaComponentStyled","withStyles","Square","Piece","isHighlighted","darkBackground","className","square","innerContainer","highlighted","palette","breakpoints","border","grey","display","alignItems","justifyContent","margin","minHeight","minWidth","down","backgroundColor","selected","animation","namespacedActionCreator","namespace","type","action","payload","ActionCreator","resetGame","squareClicked","startGame","updateBoard","setGameStatus","removeBoardIndicators","onPlacePawn","selectPiece","movePiece","setSelectedSquare","SquareComponentStateful","compose","connect","dispatch","WrappedComponent","props","piece","withSquareState","y","x","Board","board","container","row","rowId","GAME_STATUS","NOT_STARTED","SELECTING_STARTING_POSITION","PLAYING","PIECES","WHITE","PAWN","BLACK","pawn","yIndex","xIndex","isWhite","startingRow","moveModifier","PAWN_MOVES","INITIAL","SIMPLE","ATTACK_LEFT","ATTACK_RIGHT","availableMoves","onStartingColumn","onEndingColumn","hasPiece1StepAhead","hasPiece2StepsAhead","hasEnemyPieceOnFrontLeft","hasEnemyPieceOnFrontRight","whitePawn","squareId","boardCopy","cloneDeep","squareCoordinates","boardRow","rowDescription","split","reduce","part","isNaN","Number","numberOfEmptySquares","Array","fill","emptyRow","getInitialBoard","getInitialBoardWithIDs","rowIndex","columnIndex","hasOwnPiece","whitePieces","Object","values","includes","isValidSquareIdForPawnInitialPlacement","initialState","status","selectedSquare","reducer","handleActions","state","newBoard","newStatus","game","combineEpics","action$","state$","pipe","ofType","pluck","filter","value","clickedSquareId","concatMap","clickedSquare","getAvailableMoves","forEach","xDiff","yDiff","newX","length","oldRows","highlightedRow","newBoardState","slice","squareToMoveAtId","targetY","targetX","selectedSquareId","oldX","oldY","some","movingPiece","BoardComponentStateful","withBoardState","Info","Typography","href","target","rel","Layout","direction","boardAreaContainer","boardContainer","marginBottom","LayoutComponentStateful","push","withLayoutState","initialReducer","gameReducer","gameInitialState","initialEpics","gameEpics","store","epicMiddleware","createEpicMiddleware","middleware","composeEnhancers","composeWithDevTools","name","reduxCreateStore","combineReducers","applyMiddleware","run","createStore","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fec5efd0.chunk.js","sourcesContent":["import { Button, Grid } from \"@material-ui/core\";\r\n\r\nconst ActionsArea = ({ classes, actions }) => (\r\n  <Grid item>\r\n    {actions.map(({ id, onClick, color, label }) => (\r\n      <Button\r\n        key={id}\r\n        variant=\"contained\"\r\n        color={color}\r\n        onClick={onClick}\r\n        classes={{ root: classes.button }}\r\n      >\r\n        {label}\r\n      </Button>\r\n    ))}\r\n  </Grid>\r\n);\r\n\r\nexport { ActionsArea };\r\nexport default ActionsArea;\r\n","const styles = () => ({\r\n  button: {\r\n    marginRight: \"10px\",\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","import { withStyles } from \"@material-ui/core\";\r\n\r\nimport ActionsArea from \"./ActionsArea\";\r\nimport styles from \"./styles\";\r\n\r\nconst ActionsAreaComponentStyled = withStyles(styles)(ActionsArea);\r\n\r\nexport { ActionsArea, ActionsAreaComponentStyled };\r\nexport default ActionsAreaComponentStyled;\r\n","const Square = ({ classes, Piece, onClick, isHighlighted, darkBackground }) => (\r\n  <div\r\n    className={`${classes.square}  ${\r\n      darkBackground ? classes.darkBackground : \"\"\r\n    }`}\r\n    onClick={onClick}\r\n  >\r\n    <div\r\n      className={`${classes.innerContainer} ${\r\n        isHighlighted ? classes.highlighted : \"\"\r\n      }`}\r\n    >\r\n      {Piece && <Piece />}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport { Square };\r\nexport default Square;\r\n","const styles = ({ palette, breakpoints }) => ({\r\n  \"@global\": {\r\n    \"@keyframes pulse\": {\r\n      \"0%\": {\r\n        border: `2px solid ${palette.grey[300]}`,\r\n      },\r\n      \"50%\": {\r\n        border: `2px solid ${palette.grey[400]}`,\r\n      },\r\n      \"100%\": {\r\n        border: `2px solid ${palette.grey[300]}`,\r\n      },\r\n    },\r\n  },\r\n  square: {\r\n    display: \"flex\",\r\n  },\r\n  innerContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    margin: 2,\r\n    border: \"2px solid transparent\",\r\n    minHeight: \"5rem\",\r\n    minWidth: \"5rem\",\r\n\r\n    [breakpoints.down(\"sm\")]: {\r\n      minHeight: \"2rem\",\r\n      minWidth: \"2rem\",\r\n    },\r\n  },\r\n  darkBackground: {\r\n    backgroundColor: palette.grey[100],\r\n  },\r\n  selected: {},\r\n  highlighted: {\r\n    animation: \"pulse 2s ease-in-out infinite\",\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","import { ActionCreator } from \"../utils\";\r\n\r\nconst namespacedActionCreator = ActionCreator(\"//models/BOARD\");\r\n\r\nconst setBoard = namespacedActionCreator(\"SET_BOARD\");\r\nconst resetGame = namespacedActionCreator(\"RESET_GAME\");\r\nconst squareClicked = namespacedActionCreator(\"SQUARE_CLICKED\");\r\nconst startGame = namespacedActionCreator(\"START_GAME\");\r\nconst updateBoard = namespacedActionCreator(\"UPDATE_BOARD\");\r\nconst setGameStatus = namespacedActionCreator(\"SET_GAME_STATUS\");\r\nconst removeBoardIndicators = namespacedActionCreator(\r\n  \"REMOVE_BOARD_INDICATORS\"\r\n);\r\nconst onPlacePawn = namespacedActionCreator(\"ON_PLACE_PAWN\");\r\nconst selectPiece = namespacedActionCreator(\"SELECT_PIECE\");\r\nconst movePiece = namespacedActionCreator(\"MOVE_PIECE\");\r\nconst setSelectedSquare = namespacedActionCreator(\"SET_SELECTED_SQUARE\");\r\n\r\nexport {\r\n  setBoard,\r\n  resetGame,\r\n  squareClicked,\r\n  startGame,\r\n  updateBoard,\r\n  setGameStatus,\r\n  removeBoardIndicators,\r\n  onPlacePawn,\r\n  selectPiece,\r\n  movePiece,\r\n  setSelectedSquare,\r\n};\r\n","const ActionCreator = (namespace) => (type) => {\r\n  const action = (payload) => ({\r\n    type: `${namespace}/${type}`,\r\n    payload,\r\n  });\r\n  action.type = `${namespace}/${type}`;\r\n\r\n  return action;\r\n};\r\n\r\nexport { ActionCreator };\r\nexport default ActionCreator;\r\n","import { withStyles } from \"@material-ui/core\";\r\n\r\nimport Square from \"./Square\";\r\nimport styles from \"./styles\";\r\nimport withSquareState from \"./withSquareState\";\r\n\r\nconst SquareComponentStyled = withStyles(styles)(Square);\r\nconst SquareComponentStateful = withSquareState(SquareComponentStyled);\r\n\r\nexport { Square, SquareComponentStyled, SquareComponentStateful };\r\nexport default SquareComponentStateful;\r\n","import { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport Piece from \"react-chess-pieces\";\r\n\r\nimport { squareClicked } from \"../../../../../../models/game/actions\";\r\n\r\nconst withSquareState = (WrappedComponent) => (props) => {\r\n  const { id, piece, squareClicked } = props;\r\n\r\n  const handleClick = () => {\r\n    squareClicked(id);\r\n  };\r\n\r\n  return (\r\n    <WrappedComponent\r\n      {...props}\r\n      Piece={() => <>{piece ? <Piece piece={piece} /> : null}</>}\r\n      onClick={handleClick}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  squareClicked: (id) => dispatch(squareClicked(id)),\r\n});\r\n\r\nexport { withSquareState };\r\nexport default compose(connect(null, mapDispatchToProps), withSquareState);\r\n","const darkBackground = (y, x) =>\r\n  (y % 2 !== 0 && x % 2 === 0) || (y % 2 === 0 && x % 2 !== 0);\r\n\r\nexport { darkBackground };\r\nexport default darkBackground;\r\n","import { Grid } from \"@material-ui/core\";\r\n\r\nimport { Square } from \"./components\";\r\nimport { darkBackground } from \"./utils\";\r\n\r\nconst rowId = (y) => `r-${y}`;\r\n\r\nconst Board = ({ classes, board }) => (\r\n  <div className={classes.container}>\r\n    {board.map((row, y) => (\r\n      <Grid key={rowId(y)} container>\r\n        {row.map((square, x) => (\r\n          <Square\r\n            key={square.id}\r\n            id={square.id}\r\n            darkBackground={darkBackground(y, x)}\r\n            piece={square.piece}\r\n            isHighlighted={square.isHighlighted}\r\n          />\r\n        ))}\r\n        <br />\r\n      </Grid>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport { Board };\r\nexport default Board;\r\n","const styles = () => ({\r\n  container: {\r\n    border: `2px solid #ccc`,\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","const GAME_STATUS = {\r\n  NOT_STARTED: \"NOT_STARTED\",\r\n  SELECTING_STARTING_POSITION: \"SELECTING_STARTING_POSITION\",\r\n  PLAYING: \"PLAYING\",\r\n};\r\n\r\nexport default GAME_STATUS;\r\n","const PIECES = {\r\n  WHITE: {\r\n    color: \"white\",\r\n    PAWN: \"P\",\r\n  },\r\n  BLACK: {\r\n    color: \"black\",\r\n    PAWN: \"p\",\r\n  },\r\n};\r\n\r\nexport default PIECES;\r\n","import { PIECES } from \"../../../../reference-data\";\r\n\r\nconst STARTING_COLUMN_INDEX = 0;\r\nconst ENDING_COLUMN_INDEX = 7;\r\nconst WHITE_PAWN_START_Y_INDEX = 6;\r\nconst WHITE_PAWN_END_Y_INDEX = 0;\r\n\r\nconst BLACK_PAWN_START_Y_INDEX = 1;\r\nconst BLACK_PAWN_END_Y_INDEX = 7;\r\n\r\nconst pawn = (color) => (yIndex, xIndex, board) => {\r\n  const isWhite = color === PIECES.WHITE.color;\r\n\r\n  const startingRow = isWhite\r\n    ? WHITE_PAWN_START_Y_INDEX\r\n    : BLACK_PAWN_START_Y_INDEX;\r\n\r\n  const endingRow = isWhite ? WHITE_PAWN_END_Y_INDEX : BLACK_PAWN_END_Y_INDEX;\r\n\r\n  const moveModifier = isWhite ? -1 : 1;\r\n\r\n  const PAWN_MOVES = {\r\n    INITIAL: { y: moveModifier * 2, x: 0 },\r\n    SIMPLE: { y: moveModifier, x: 0 },\r\n    ATTACK_LEFT: { y: moveModifier, x: -1 },\r\n    ATTACK_RIGHT: { y: moveModifier, x: 1 },\r\n  };\r\n\r\n  let availableMoves = [];\r\n\r\n  const reachedEndingRow = yIndex === endingRow;\r\n  const onStartingColumn = xIndex === STARTING_COLUMN_INDEX;\r\n  const onEndingColumn = xIndex === ENDING_COLUMN_INDEX;\r\n\r\n  if (reachedEndingRow) return availableMoves;\r\n\r\n  const hasPiece1StepAhead = !!board[yIndex + moveModifier][xIndex].piece;\r\n  const hasPiece2StepsAhead =\r\n    !!board[yIndex + moveModifier * 2]?.[xIndex].piece;\r\n  const hasEnemyPieceOnFrontLeft =\r\n    !onStartingColumn && !!board[yIndex + moveModifier]?.[xIndex - 1].piece;\r\n  const hasEnemyPieceOnFrontRight =\r\n    !onEndingColumn && !!board[yIndex + moveModifier]?.[xIndex + 1].piece;\r\n\r\n  const isOnStartingRow = yIndex === startingRow;\r\n  if (isOnStartingRow && !hasPiece2StepsAhead && !hasPiece1StepAhead) {\r\n    availableMoves = [...availableMoves, PAWN_MOVES.INITIAL];\r\n  }\r\n  if (!hasPiece1StepAhead) {\r\n    availableMoves = [...availableMoves, PAWN_MOVES.SIMPLE];\r\n  }\r\n  if (hasEnemyPieceOnFrontLeft) {\r\n    availableMoves = [...availableMoves, PAWN_MOVES.ATTACK_LEFT];\r\n  }\r\n  if (hasEnemyPieceOnFrontRight) {\r\n    availableMoves = [...availableMoves, PAWN_MOVES.ATTACK_RIGHT];\r\n  }\r\n\r\n  return availableMoves;\r\n};\r\n\r\nconst whitePawn = pawn(PIECES.WHITE.color);\r\nconst blackPawn = pawn(PIECES.BLACK.color);\r\n\r\nexport { pawn, whitePawn, blackPawn };\r\nexport default pawn;\r\n","import cloneDeep from \"lodash.clonedeep\";\r\nimport { squareCoordinates } from \".\";\r\nimport { PIECES } from \"../../../reference-data\";\r\nimport { whitePawn } from \"./movements/pawn\";\r\n\r\nconst availableMoves = (squareId, board) => {\r\n  const boardCopy = cloneDeep(board);\r\n  const { y, x } = squareCoordinates(squareId);\r\n  const { piece } = board[y][x];\r\n\r\n  switch (piece) {\r\n    case PIECES.WHITE.PAWN: {\r\n      return whitePawn(y, x, boardCopy);\r\n    }\r\n    default:\r\n      return [];\r\n  }\r\n};\r\n\r\nexport { availableMoves };\r\nexport default availableMoves;\r\n","/**\r\n * @param {string} rowDescription using FEN row description\r\n * @returns {string[][]} board\r\n */\r\nconst boardRow = (rowDescription) => {\r\n  const rowParts = rowDescription.split(\"\");\r\n\r\n  return rowParts.reduce((row, part) => {\r\n    if (!isNaN(Number(part))) {\r\n      const numberOfEmptySquares = Number(part);\r\n\r\n      return [\r\n        ...row,\r\n        ...Array(numberOfEmptySquares).fill({\r\n          piece: null,\r\n          isHighlighted: false,\r\n        }),\r\n      ];\r\n    }\r\n    return [...row, { piece: part, isHighlighted: false }];\r\n  }, []);\r\n};\r\n\r\nconst emptyRow = () => boardRow(\"8\");\r\n\r\nconst getInitialBoard = () => [\r\n  emptyRow(),\r\n  boardRow(\"2p5\"),\r\n  ...Array(6).fill(emptyRow()),\r\n];\r\n\r\nexport { getInitialBoard };\r\nexport default getInitialBoard;\r\n","import { getInitialBoard } from \".\";\r\n\r\nconst getInitialBoardWithIDs = () => {\r\n  const board = getInitialBoard();\r\n  const newBoard = board.map((row, rowIndex) =>\r\n    row.map((square, columnIndex) => ({\r\n      ...square,\r\n      id: `${rowIndex}-${columnIndex}`,\r\n    }))\r\n  );\r\n\r\n  return newBoard;\r\n};\r\n\r\nexport { getInitialBoardWithIDs };\r\nexport default getInitialBoardWithIDs;\r\n","const squareCoordinates = (squareId) => ({\r\n  y: +squareId[0],\r\n  x: +squareId[2],\r\n});\r\n\r\nexport { squareCoordinates };\r\nexport default squareCoordinates;\r\n","import { PIECES } from \"../../../reference-data\";\r\nimport squareCoordinates from \"./squareCoordinates\";\r\n\r\nconst hasOwnPiece = (squareId, board) => {\r\n  const { y, x } = squareCoordinates(squareId);\r\n  const piece = board[y][x].piece;\r\n\r\n  const whitePieces = Object.values(PIECES.WHITE);\r\n  return piece !== null && whitePieces.includes(piece);\r\n};\r\n\r\nexport { hasOwnPiece };\r\nexport default hasOwnPiece;\r\n","import squareCoordinates from \"./squareCoordinates\";\r\n\r\nconst isValidSquareIdForPawnInitialPlacement = (squareId) =>\r\n  squareCoordinates(squareId).y === 6;\r\n\r\nexport { isValidSquareIdForPawnInitialPlacement };\r\nexport default isValidSquareIdForPawnInitialPlacement;\r\n","import { handleActions } from \"redux-actions\";\r\n\r\nimport {\r\n  resetGame,\r\n  updateBoard,\r\n  setGameStatus,\r\n  setSelectedSquare,\r\n} from \"./actions\";\r\nimport { getInitialBoardWithIDs } from \"./utils\";\r\nimport GAME_STATUS from \"../../reference-data/gameStatus\";\r\n\r\nconst initialState = {\r\n  board: getInitialBoardWithIDs(),\r\n  status: GAME_STATUS.NOT_STARTED,\r\n  selectedSquare: null,\r\n};\r\n\r\nconst reducer = handleActions(\r\n  {\r\n    [resetGame.type]: () => ({\r\n      ...initialState,\r\n    }),\r\n    [updateBoard.type]: (state, { payload: newBoard }) => ({\r\n      ...state,\r\n      board: newBoard,\r\n    }),\r\n    [setGameStatus.type]: (state, { payload: newStatus }) => ({\r\n      ...state,\r\n      status: newStatus,\r\n    }),\r\n    [setSelectedSquare.type]: (state, { payload: selectedSquare }) => ({\r\n      ...state,\r\n      selectedSquare,\r\n    }),\r\n  },\r\n  initialState\r\n);\r\n\r\nexport { reducer, initialState };\r\nexport default reducer;\r\n","const board = ({ game }) => game?.board;\r\nconst status = ({ game }) => game?.status;\r\nconst selectedSquare = ({ game }) => game?.selectedSquare;\r\n\r\nexport { board, selectedSquare, status };\r\n","import { combineEpics, ofType } from \"redux-observable\";\r\nimport { filter, map, pluck, concatMap } from \"rxjs/operators\";\r\nimport { cloneDeep } from \"lodash\";\r\n\r\nimport { GAME_STATUS, PIECES } from \"../../reference-data/\";\r\nimport {\r\n  isValidSquareIdForPawnInitialPlacement,\r\n  squareCoordinates,\r\n  hasOwnPiece,\r\n  availableMoves as getAvailableMoves,\r\n} from \"./utils\";\r\nimport {\r\n  squareClicked,\r\n  startGame,\r\n  updateBoard,\r\n  setGameStatus,\r\n  removeBoardIndicators,\r\n  onPlacePawn,\r\n  selectPiece,\r\n  movePiece,\r\n  setSelectedSquare,\r\n} from \"./actions\";\r\nimport { board, selectedSquare, status } from \"./selectors\";\r\n\r\nconst onSquareClickedEpic = (action$, state$) =>\r\n  action$.pipe(\r\n    ofType(squareClicked.type),\r\n    pluck(\"payload\"),\r\n    filter(() => status(state$.value) !== GAME_STATUS.NOT_STARTED),\r\n    map((clickedSquareId) => {\r\n      if (status(state$.value) === GAME_STATUS.SELECTING_STARTING_POSITION) {\r\n        return onPlacePawn(clickedSquareId);\r\n      }\r\n      if (\r\n        status(state$.value) === GAME_STATUS.PLAYING &&\r\n        !selectedSquare(state$.value)\r\n      ) {\r\n        return selectPiece(clickedSquareId);\r\n      }\r\n      if (\r\n        status(state$.value) === GAME_STATUS.PLAYING &&\r\n        selectedSquare(state$.value)\r\n      ) {\r\n        return movePiece(clickedSquareId);\r\n      }\r\n    })\r\n  );\r\n\r\nconst onPlacePawnEpic = (action$, state$) =>\r\n  action$.pipe(\r\n    ofType(onPlacePawn.type),\r\n    pluck(\"payload\"),\r\n    filter(isValidSquareIdForPawnInitialPlacement),\r\n    concatMap((clickedSquareId) => {\r\n      const boardCopy = cloneDeep(board(state$.value));\r\n      const { y, x } = squareCoordinates(clickedSquareId);\r\n\r\n      boardCopy[y][x].piece = PIECES.WHITE.PAWN;\r\n\r\n      return [\r\n        updateBoard(boardCopy),\r\n        removeBoardIndicators(),\r\n        setGameStatus(GAME_STATUS.PLAYING),\r\n      ];\r\n    })\r\n  );\r\n\r\nconst onPieceSelectionEpic = (action$, state$) =>\r\n  action$.pipe(\r\n    ofType(selectPiece.type),\r\n    pluck(\"payload\"),\r\n    filter((squareId) => hasOwnPiece(squareId, board(state$.value))),\r\n    concatMap((squareId) => {\r\n      const selectedSquareId = selectedSquare(state$.value);\r\n      const hasSelectedTheSameSquare = selectedSquareId === squareId;\r\n\r\n      if (hasSelectedTheSameSquare) {\r\n        return [setSelectedSquare(null), removeBoardIndicators()];\r\n      }\r\n\r\n      const boardCopy = cloneDeep(board(state$.value));\r\n      const { y, x } = squareCoordinates(squareId);\r\n      const clickedSquare = boardCopy[y][x];\r\n      clickedSquare.isHighlighted = !clickedSquare.isHighlighted;\r\n\r\n      const availableMoves = getAvailableMoves(squareId, boardCopy);\r\n\r\n      availableMoves.forEach(({ x: xDiff, y: yDiff }) => {\r\n        const newX = x + xDiff;\r\n        const newY = y + yDiff;\r\n\r\n        boardCopy[newY][newX].isHighlighted = true;\r\n      });\r\n\r\n      if (!availableMoves.length) {\r\n        return [removeBoardIndicators()];\r\n      }\r\n\r\n      return [setSelectedSquare(squareId), updateBoard(boardCopy)];\r\n    })\r\n  );\r\n\r\nconst onMovePieceEpic = (action$, state$) =>\r\n  action$.pipe(\r\n    ofType(movePiece.type),\r\n    pluck(\"payload\"),\r\n    concatMap((squareToMoveAtId) => {\r\n      const boardCopy = cloneDeep(board(state$.value));\r\n      const { y: targetY, x: targetX } = squareCoordinates(squareToMoveAtId);\r\n\r\n      const selectedSquareId = selectedSquare(state$.value);\r\n      const { x: oldX, y: oldY } = squareCoordinates(selectedSquareId);\r\n\r\n      const availableMoves = getAvailableMoves(selectedSquareId, boardCopy);\r\n      const isMoveValid = availableMoves.some(({ x: xDiff, y: yDiff }) => {\r\n        const newX = oldX + xDiff;\r\n        const newY = oldY + yDiff;\r\n\r\n        return newX === targetX && newY === targetY;\r\n      });\r\n\r\n      let actions = [];\r\n\r\n      if (isMoveValid) {\r\n        const movingPiece = boardCopy[oldY][oldX].piece;\r\n        boardCopy[targetY][targetX].piece = movingPiece;\r\n        boardCopy[oldY][oldX].piece = null;\r\n        actions = [...actions, updateBoard(boardCopy)];\r\n      }\r\n\r\n      actions = [...actions, setSelectedSquare(null), removeBoardIndicators()];\r\n\r\n      return actions;\r\n    })\r\n  );\r\n\r\nconst onRemoveIndicatorsEpic = (action$, state$) =>\r\n  action$.pipe(\r\n    ofType(removeBoardIndicators.type),\r\n    map(() => {\r\n      const boardCopy = cloneDeep(board(state$.value));\r\n      boardCopy.forEach((row) =>\r\n        row.forEach((square) => (square.isHighlighted = false))\r\n      );\r\n\r\n      return updateBoard(boardCopy);\r\n    })\r\n  );\r\n\r\nconst onGameStartEpic = (action$, state$) =>\r\n  action$.pipe(\r\n    ofType(startGame.type),\r\n    concatMap(() => {\r\n      const oldRows = board(state$.value);\r\n      const highlightedRow = oldRows\r\n        .filter((row, yIndex) => yIndex === 6)\r\n        .map((row) =>\r\n          row.map((square) => ({ ...square, isHighlighted: true }))\r\n        );\r\n\r\n      const newBoardState = [\r\n        ...oldRows.slice(0, 6),\r\n        ...highlightedRow,\r\n        ...oldRows.slice(7),\r\n      ];\r\n\r\n      return [\r\n        updateBoard(newBoardState),\r\n        setGameStatus(GAME_STATUS.SELECTING_STARTING_POSITION),\r\n      ];\r\n    })\r\n  );\r\n\r\nexport {\r\n  onSquareClickedEpic,\r\n  onGameStartEpic,\r\n  onPlacePawnEpic,\r\n  onRemoveIndicatorsEpic,\r\n  onPieceSelectionEpic,\r\n  onMovePieceEpic,\r\n};\r\nexport default combineEpics(\r\n  onSquareClickedEpic,\r\n  onPieceSelectionEpic,\r\n  onPlacePawnEpic,\r\n  onGameStartEpic,\r\n  onRemoveIndicatorsEpic,\r\n  onMovePieceEpic\r\n);\r\n","import { withStyles } from \"@material-ui/styles\";\r\n\r\nimport Board from \"./Board\";\r\nimport styles from \"./styles\";\r\nimport withBoardState from \"./withBoardState\";\r\n\r\nconst BoardComponentStyled = withStyles(styles)(Board);\r\nconst BoardComponentStateful = withBoardState(BoardComponentStyled);\r\n\r\nexport { Board, BoardComponentStyled, BoardComponentStateful };\r\nexport default BoardComponentStateful;\r\n","import { connect } from \"react-redux\";\r\nimport { board } from \"../../../../models/game\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  board: board(state),\r\n});\r\n\r\nexport default connect(mapStateToProps);\r\n","import Info from \"./Info\";\r\n\r\nexport default Info;\r\n","import { Grid, Typography } from \"@material-ui/core\";\r\n\r\nconst Info = () => (\r\n  <Grid item>\r\n    <Typography variant=\"overline\">\r\n      <a\r\n        href=\"https://github.com/stacon/chess-concept\"\r\n        target=\"_blank\"\r\n        rel=\"noreferrer\"\r\n      >\r\n        One Pawn Chess concept\r\n      </a>{\" \"}\r\n      created by{\" \"}\r\n      <a href=\"https://github.com/stacon\" target=\"_blank\" rel=\"noreferrer\">\r\n        stacon\r\n      </a>\r\n    </Typography>\r\n  </Grid>\r\n);\r\n\r\nexport { Info };\r\nexport default Info;\r\n","import { Grid } from \"@material-ui/core\";\r\n\r\nimport { ActionsArea, Board, Info } from \"./components\";\r\n\r\nconst Layout = ({ classes, actions }) => (\r\n  <Grid\r\n    container\r\n    className={classes.container}\r\n    justifyContent=\"center\"\r\n    alignItems=\"center\"\r\n  >\r\n    <Grid\r\n      container\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      direction=\"column\"\r\n      className={classes.boardAreaContainer}\r\n    >\r\n      <div className={classes.boardContainer}>\r\n        <Board />\r\n      </div>\r\n      <ActionsArea actions={actions} />\r\n    </Grid>\r\n    <Info />\r\n  </Grid>\r\n);\r\n\r\nexport { Layout };\r\nexport default Layout;\r\n","const styles = () => ({\r\n  container: {\r\n    minHeight: \"100vh\",\r\n  },\r\n  boardAreaContainer: {\r\n    margin: \"0 auto\",\r\n  },\r\n  boardContainer: {\r\n    marginBottom: 10,\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","import { withStyles } from \"@material-ui/styles\";\r\nimport Layout from \"./Layout\";\r\nimport styles from \"./styles\";\r\nimport withLayoutState from \"./withLayoutState\";\r\n\r\nconst LayoutComponentStyled = withStyles(styles)(Layout);\r\nconst LayoutComponentStateful = withLayoutState(LayoutComponentStyled);\r\n\r\nexport { Layout, LayoutComponentStyled, LayoutComponentStateful };\r\nexport default LayoutComponentStateful;\r\n","import { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { status, startGame, resetGame } from \"../../models/game\";\r\nimport GAME_STATUS from \"../../reference-data/gameStatus\";\r\n\r\nconst withLayoutState = (WrappedComponent) => (props) => {\r\n  const { status, startGame, resetGame } = props;\r\n  const actions = [];\r\n\r\n  if (status === GAME_STATUS.NOT_STARTED) {\r\n    actions.push({\r\n      id: \"place-pawn\",\r\n      label: \"Place Pawn\",\r\n      color: \"primary\",\r\n      onClick: startGame,\r\n    });\r\n  }\r\n\r\n  if (status !== GAME_STATUS.NOT_STARTED) {\r\n    actions.push({\r\n      id: \"reset\",\r\n      label: \"Reset\",\r\n      color: \"secondary\",\r\n      onClick: resetGame,\r\n    });\r\n  }\r\n\r\n  return <WrappedComponent {...props} actions={actions} />;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  status: status(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  startGame: () => dispatch(startGame()),\r\n  resetGame: () => dispatch(resetGame()),\r\n});\r\n\r\nexport { withLayoutState };\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withLayoutState\r\n);\r\n","import { combineEpics } from \"redux-observable\";\r\nimport {\r\n  reducer as gameReducer,\r\n  epics as gameEpics,\r\n  initialState as gameInitialState,\r\n} from \"../models/game\";\r\n\r\nconst initialReducer = {\r\n  game: gameReducer,\r\n};\r\n\r\nconst initialState = {\r\n  game: gameInitialState,\r\n};\r\n\r\nconst initialEpics = combineEpics(gameEpics);\r\n\r\nexport { initialReducer, initialEpics, initialState };\r\n","import { Provider } from \"react-redux\";\n\nimport { Layout } from \"./components\";\nimport createStore from \"./store/createStore\";\n\nconst store = createStore();\n\nconst App = () => (\n  <Provider store={store}>\n    <div className=\"App\">\n      <Layout />\n    </div>\n  </Provider>\n);\n\nexport default App;\n","import {\r\n  applyMiddleware,\r\n  combineReducers,\r\n  createStore as reduxCreateStore,\r\n} from \"redux\";\r\nimport { createEpicMiddleware } from \"redux-observable\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport { initialReducer, initialState, initialEpics } from \"./storeConfig\";\r\n\r\nconst createStore = () => {\r\n  const epicMiddleware = createEpicMiddleware();\r\n  const middleware = [epicMiddleware];\r\n\r\n  const composeEnhancers = composeWithDevTools({ name: \"chess-concept\" });\r\n\r\n  const store = reduxCreateStore(\r\n    combineReducers(initialReducer),\r\n    initialState,\r\n    composeEnhancers(applyMiddleware(...middleware))\r\n  );\r\n\r\n  epicMiddleware.run(initialEpics);\r\n\r\n  return store;\r\n};\r\n\r\nexport { createStore };\r\nexport default createStore;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}